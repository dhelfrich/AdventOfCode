/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package AdventOfCode-0.1.0.0 */
#ifndef VERSION_AdventOfCode
#define VERSION_AdventOfCode "0.1.0.0"
#endif /* VERSION_AdventOfCode */
#ifndef MIN_VERSION_AdventOfCode
#define MIN_VERSION_AdventOfCode(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_VERSION_AdventOfCode */
/* package base-4.18.2.0 */
#ifndef VERSION_base
#define VERSION_base "4.18.2.0"
#endif /* VERSION_base */
#ifndef MIN_VERSION_base
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  18 || \
  (major1) == 4 && (major2) == 18 && (minor) <= 2)
#endif /* MIN_VERSION_base */
/* package bytestring-0.11.5.3 */
#ifndef VERSION_bytestring
#define VERSION_bytestring "0.11.5.3"
#endif /* VERSION_bytestring */
#ifndef MIN_VERSION_bytestring
#define MIN_VERSION_bytestring(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  11 || \
  (major1) == 0 && (major2) == 11 && (minor) <= 5)
#endif /* MIN_VERSION_bytestring */
/* package containers-0.6.7 */
#ifndef VERSION_containers
#define VERSION_containers "0.6.7"
#endif /* VERSION_containers */
#ifndef MIN_VERSION_containers
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  6 || \
  (major1) == 0 && (major2) == 6 && (minor) <= 7)
#endif /* MIN_VERSION_containers */
/* package cryptonite-0.30 */
#ifndef VERSION_cryptonite
#define VERSION_cryptonite "0.30"
#endif /* VERSION_cryptonite */
#ifndef MIN_VERSION_cryptonite
#define MIN_VERSION_cryptonite(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  30 || \
  (major1) == 0 && (major2) == 30 && (minor) <= 0)
#endif /* MIN_VERSION_cryptonite */
/* package megaparsec-9.6.1 */
#ifndef VERSION_megaparsec
#define VERSION_megaparsec "9.6.1"
#endif /* VERSION_megaparsec */
#ifndef MIN_VERSION_megaparsec
#define MIN_VERSION_megaparsec(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  6 || \
  (major1) == 9 && (major2) == 6 && (minor) <= 1)
#endif /* MIN_VERSION_megaparsec */
/* package regex-posix-0.96.0.1 */
#ifndef VERSION_regex_posix
#define VERSION_regex_posix "0.96.0.1"
#endif /* VERSION_regex_posix */
#ifndef MIN_VERSION_regex_posix
#define MIN_VERSION_regex_posix(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  96 || \
  (major1) == 0 && (major2) == 96 && (minor) <= 0)
#endif /* MIN_VERSION_regex_posix */
/* package regex-tdfa-1.3.2.2 */
#ifndef VERSION_regex_tdfa
#define VERSION_regex_tdfa "1.3.2.2"
#endif /* VERSION_regex_tdfa */
#ifndef MIN_VERSION_regex_tdfa
#define MIN_VERSION_regex_tdfa(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 2)
#endif /* MIN_VERSION_regex_tdfa */
/* package scientific-0.3.7.0 */
#ifndef VERSION_scientific
#define VERSION_scientific "0.3.7.0"
#endif /* VERSION_scientific */
#ifndef MIN_VERSION_scientific
#define MIN_VERSION_scientific(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 7)
#endif /* MIN_VERSION_scientific */
/* package split-0.2.5 */
#ifndef VERSION_split
#define VERSION_split "0.2.5"
#endif /* VERSION_split */
#ifndef MIN_VERSION_split
#define MIN_VERSION_split(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 5)
#endif /* MIN_VERSION_split */
/* package text-2.0.2 */
#ifndef VERSION_text
#define VERSION_text "2.0.2"
#endif /* VERSION_text */
#ifndef MIN_VERSION_text
#define MIN_VERSION_text(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 2)
#endif /* MIN_VERSION_text */
/* package vector-0.13.1.0 */
#ifndef VERSION_vector
#define VERSION_vector "0.13.1.0"
#endif /* VERSION_vector */
#ifndef MIN_VERSION_vector
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  13 || \
  (major1) == 0 && (major2) == 13 && (minor) <= 1)
#endif /* MIN_VERSION_vector */

/* tool gcc-14.0.6 */
#ifndef TOOL_VERSION_gcc
#define TOOL_VERSION_gcc "14.0.6"
#endif /* TOOL_VERSION_gcc */
#ifndef MIN_TOOL_VERSION_gcc
#define MIN_TOOL_VERSION_gcc(major1,major2,minor) (\
  (major1) <  14 || \
  (major1) == 14 && (major2) <  0 || \
  (major1) == 14 && (major2) == 0 && (minor) <= 6)
#endif /* MIN_TOOL_VERSION_gcc */
/* tool ghc-9.6.4 */
#ifndef TOOL_VERSION_ghc
#define TOOL_VERSION_ghc "9.6.4"
#endif /* TOOL_VERSION_ghc */
#ifndef MIN_TOOL_VERSION_ghc
#define MIN_TOOL_VERSION_ghc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  6 || \
  (major1) == 9 && (major2) == 6 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc */
/* tool ghc-pkg-9.6.4 */
#ifndef TOOL_VERSION_ghc_pkg
#define TOOL_VERSION_ghc_pkg "9.6.4"
#endif /* TOOL_VERSION_ghc_pkg */
#ifndef MIN_TOOL_VERSION_ghc_pkg
#define MIN_TOOL_VERSION_ghc_pkg(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  6 || \
  (major1) == 9 && (major2) == 6 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_ghc_pkg */
/* tool haddock-2.29.2 */
#ifndef TOOL_VERSION_haddock
#define TOOL_VERSION_haddock "2.29.2"
#endif /* TOOL_VERSION_haddock */
#ifndef MIN_TOOL_VERSION_haddock
#define MIN_TOOL_VERSION_haddock(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  29 || \
  (major1) == 2 && (major2) == 29 && (minor) <= 2)
#endif /* MIN_TOOL_VERSION_haddock */
/* tool hpc-0.68 */
#ifndef TOOL_VERSION_hpc
#define TOOL_VERSION_hpc "0.68"
#endif /* TOOL_VERSION_hpc */
#ifndef MIN_TOOL_VERSION_hpc
#define MIN_TOOL_VERSION_hpc(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_hpc */
/* tool hsc2hs-0.68.9 */
#ifndef TOOL_VERSION_hsc2hs
#define TOOL_VERSION_hsc2hs "0.68.9"
#endif /* TOOL_VERSION_hsc2hs */
#ifndef MIN_TOOL_VERSION_hsc2hs
#define MIN_TOOL_VERSION_hsc2hs(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  68 || \
  (major1) == 0 && (major2) == 68 && (minor) <= 9)
#endif /* MIN_TOOL_VERSION_hsc2hs */
/* tool pkg-config-2.1.0 */
#ifndef TOOL_VERSION_pkg_config
#define TOOL_VERSION_pkg_config "2.1.0"
#endif /* TOOL_VERSION_pkg_config */
#ifndef MIN_TOOL_VERSION_pkg_config
#define MIN_TOOL_VERSION_pkg_config(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_pkg_config */
/* tool runghc-9.6.4 */
#ifndef TOOL_VERSION_runghc
#define TOOL_VERSION_runghc "9.6.4"
#endif /* TOOL_VERSION_runghc */
#ifndef MIN_TOOL_VERSION_runghc
#define MIN_TOOL_VERSION_runghc(major1,major2,minor) (\
  (major1) <  9 || \
  (major1) == 9 && (major2) <  6 || \
  (major1) == 9 && (major2) == 6 && (minor) <= 4)
#endif /* MIN_TOOL_VERSION_runghc */
/* tool strip-2.41 */
#ifndef TOOL_VERSION_strip
#define TOOL_VERSION_strip "2.41"
#endif /* TOOL_VERSION_strip */
#ifndef MIN_TOOL_VERSION_strip
#define MIN_TOOL_VERSION_strip(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  41 || \
  (major1) == 2 && (major2) == 41 && (minor) <= 0)
#endif /* MIN_TOOL_VERSION_strip */

#ifndef CURRENT_PACKAGE_KEY
#define CURRENT_PACKAGE_KEY "AdventOfCode-0.1.0.0-inplace"
#endif /* CURRENT_packageKey */
#ifndef CURRENT_COMPONENT_ID
#define CURRENT_COMPONENT_ID "AdventOfCode-0.1.0.0-inplace"
#endif /* CURRENT_COMPONENT_ID */
#ifndef CURRENT_PACKAGE_VERSION
#define CURRENT_PACKAGE_VERSION "0.1.0.0"
#endif /* CURRENT_PACKAGE_VERSION */
